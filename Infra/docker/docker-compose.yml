version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ats-postgres
    environment:
      POSTGRES_DB: ats_scoring
      POSTGRES_USER: ats_user
      POSTGRES_PASSWORD: ats_password
    ports:
      - "5433:5432"  # Changed from 5432:5432 to avoid conflicts
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ats_user -d ats_scoring"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for job queue
  redis:
    image: redis:7-alpine
    container_name: ats-redis
    ports:
      - "6380:6379"  # Changed from 6379:6379 to avoid conflicts
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Node.js + Express)
  backend:
    build:
      context: ../../Backend
      dockerfile: Dockerfile
    container_name: ats-backend
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: development
      PORT: 8000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ats_scoring
      POSTGRES_USER: ats_user
      POSTGRES_PASSWORD: ats_password
      USE_S3: false
      LOCAL_STORAGE_PATH: /app/uploads
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Python ML Service (FastAPI)
  model:
    build:
      context: ../../model
      dockerfile: Dockerfile
    container_name: ats-model
    ports:
      - "8001:8001"
    environment:
      PORT: 8001
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React)
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: ats-frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_BASE_URL: http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  backend_uploads:
